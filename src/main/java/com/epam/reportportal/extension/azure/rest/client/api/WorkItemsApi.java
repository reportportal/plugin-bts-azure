/*
 * WorkItemTracking
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.epam.reportportal.extension.azure.rest.client.api;

import com.epam.reportportal.extension.azure.rest.client.ApiCallback;
import com.epam.reportportal.extension.azure.rest.client.ApiClient;
import com.epam.reportportal.extension.azure.rest.client.ApiException;
import com.epam.reportportal.extension.azure.rest.client.ApiResponse;
import com.epam.reportportal.extension.azure.rest.client.Configuration;
import com.epam.reportportal.extension.azure.rest.client.Pair;
import com.epam.reportportal.extension.azure.rest.client.ProgressRequestBody;
import com.epam.reportportal.extension.azure.rest.client.ProgressResponseBody;
import com.epam.reportportal.extension.azure.rest.client.model.workitem.JsonPatchOperation;
import com.epam.reportportal.extension.azure.rest.client.model.workitem.WorkItem;
import com.google.gson.reflect.TypeToken;
import com.squareup.okhttp.Call;
import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

public class WorkItemsApi {
    private ApiClient apiClient;

    public WorkItemsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public WorkItemsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for workItemsGetWorkItem
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The work item id (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public Call workItemsGetWorkItemCall(String organization, Integer id, String project, String apiVersion, String fields, OffsetDateTime asOf, String expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{organization}/{project}/_apis/wit/workitems/{id}"
            .replaceAll("\\{" + "organization" + "\\}", apiClient.escapeString(organization.toString()))
            .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()))
            .replaceAll("\\{" + "project" + "\\}", apiClient.escapeString(project.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (fields != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("fields", fields));
        }
        if (asOf != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("asOf", asOf));
        }
        if (expand != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("$expand", expand));
        }
        if (apiVersion != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("api-version", apiVersion));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "oauth2", "accessToken" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private Call workItemsGetWorkItemValidateBeforeCall(String organization, Integer id, String project, String apiVersion, String fields, OffsetDateTime asOf, String expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        
        // verify the required parameter 'organization' is set
        if (organization == null) {
            throw new ApiException("Missing the required parameter 'organization' when calling workItemsGetWorkItem(Async)");
        }
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling workItemsGetWorkItem(Async)");
        }
        
        // verify the required parameter 'project' is set
        if (project == null) {
            throw new ApiException("Missing the required parameter 'project' when calling workItemsGetWorkItem(Async)");
        }
        
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workItemsGetWorkItem(Async)");
        }

        Call call = workItemsGetWorkItemCall(organization, id, project, apiVersion, fields, asOf, expand, progressListener, progressRequestListener);
        return call;
    }

    /**
     * 
     * Returns a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The work item id (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return WorkItem
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public WorkItem workItemsGetWorkItem(String organization, Integer id, String project, String apiVersion, String fields, OffsetDateTime asOf, String expand) throws ApiException {
        ApiResponse<WorkItem> resp = workItemsGetWorkItemWithHttpInfo(organization, id, project, apiVersion, fields, asOf, expand);
        return resp.getData();
    }

    /**
     * 
     * Returns a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The work item id (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return ApiResponse&lt;WorkItem&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<WorkItem> workItemsGetWorkItemWithHttpInfo(String organization, Integer id, String project, String apiVersion, String fields, OffsetDateTime asOf, String expand) throws ApiException {
        Call call = workItemsGetWorkItemValidateBeforeCall(organization, id, project, apiVersion, fields, asOf, expand, null, null);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param id The work item id (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param fields Comma-separated list of requested fields (optional)
     * @param asOf AsOf UTC date time string (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public Call workItemsGetWorkItemAsync(String organization, Integer id, String project, String apiVersion, String fields, OffsetDateTime asOf, String expand, final ApiCallback<WorkItem> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        Call call = workItemsGetWorkItemValidateBeforeCall(organization, id, project, apiVersion, fields, asOf, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }

    /**
     * Build call for workItemsCreate
     * @param organization The name of the Azure DevOps organization. (required)
     * @param body The JSON Patch document representing the work item (required)
     * @param project Project ID or project name (required)
     * @param type The work item type of the work item to create (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public Call workItemsCreateCall(String organization, List<JsonPatchOperation> body, String project, String type, String apiVersion, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/{organization}/{project}/_apis/wit/workitems/${type}"
                .replaceAll("\\{" + "organization" + "\\}", apiClient.escapeString(organization.toString()))
                .replaceAll("\\{" + "project" + "\\}", apiClient.escapeString(project.toString()))
                .replaceAll("\\{" + "type" + "\\}", apiClient.escapeString(type.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (validateOnly != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("validateOnly", validateOnly));
        }
        if (bypassRules != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("bypassRules", bypassRules));
        }
        if (suppressNotifications != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("suppressNotifications", suppressNotifications));
        }
        if (expand != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("$expand", expand));
        }
        if (apiVersion != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("api-version", apiVersion));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
                "application/json-patch+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                            .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                            .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "oauth2", "accessToken" };
        return apiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private Call workItemsCreateValidateBeforeCall(String organization, List<JsonPatchOperation> body, String project, String type, String apiVersion, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {

        // verify the required parameter 'organization' is set
        if (organization == null) {
            throw new ApiException("Missing the required parameter 'organization' when calling workItemsCreate(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling workItemsCreate(Async)");
        }

        // verify the required parameter 'project' is set
        if (project == null) {
            throw new ApiException("Missing the required parameter 'project' when calling workItemsCreate(Async)");
        }

        // verify the required parameter 'type' is set
        if (type == null) {
            throw new ApiException("Missing the required parameter 'type' when calling workItemsCreate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workItemsCreate(Async)");
        }

        Call call = workItemsCreateCall(organization, body, project, type, apiVersion, validateOnly, bypassRules, suppressNotifications, expand, progressListener, progressRequestListener);
        return call;
    }

    /**
     *
     * Creates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param body The JSON Patch document representing the work item (required)
     * @param project Project ID or project name (required)
     * @param type The work item type of the work item to create (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return WorkItem
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public WorkItem workItemsCreate(String organization, List<JsonPatchOperation> body, String project, String type, String apiVersion, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String expand) throws ApiException {
        ApiResponse<WorkItem> resp = workItemsCreateWithHttpInfo(organization, body, project, type, apiVersion, validateOnly, bypassRules, suppressNotifications, expand);
        return resp.getData();
    }

    /**
     *
     * Creates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param body The JSON Patch document representing the work item (required)
     * @param project Project ID or project name (required)
     * @param type The work item type of the work item to create (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return ApiResponse&lt;WorkItem&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<WorkItem> workItemsCreateWithHttpInfo(String organization, List<JsonPatchOperation> body, String project, String type, String apiVersion, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String expand) throws ApiException {
        Call call = workItemsCreateValidateBeforeCall(organization, body, project, type, apiVersion, validateOnly, bypassRules, suppressNotifications, expand, null, null);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Creates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param body The JSON Patch document representing the work item (required)
     * @param project Project ID or project name (required)
     * @param type The work item type of the work item to create (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public Call workItemsCreateAsync(String organization, List<JsonPatchOperation> body, String project, String type, String apiVersion, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String expand, final ApiCallback<WorkItem> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        Call call = workItemsCreateValidateBeforeCall(organization, body, project, type, apiVersion, validateOnly, bypassRules, suppressNotifications, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }

    /**
     * Build call for workItemsUpdate
     * @param organization The name of the Azure DevOps organization. (required)
     * @param body The JSON Patch document representing the update (required)
     * @param id The id of the work item to update (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call workItemsUpdateCall(String organization, List<JsonPatchOperation> body, Integer id, String project, String apiVersion, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/{organization}/{project}/_apis/wit/workitems/{id}"
                .replaceAll("\\{" + "organization" + "\\}", apiClient.escapeString(organization.toString()))
                .replaceAll("\\{" + "id" + "\\}", apiClient.escapeString(id.toString()))
                .replaceAll("\\{" + "project" + "\\}", apiClient.escapeString(project.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (validateOnly != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("validateOnly", validateOnly));
        }
        if (bypassRules != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("bypassRules", bypassRules));
        }
        if (suppressNotifications != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("suppressNotifications", suppressNotifications));
        }
        if (expand != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("$expand", expand));
        }
        if (apiVersion != null) {
            localVarQueryParams.addAll(apiClient.parameterToPair("api-version", apiVersion));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
                "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
                "application/json-patch+json"
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                            .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                            .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "oauth2", "accessToken" };
        return apiClient.buildCall(localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }

    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call workItemsUpdateValidateBeforeCall(String organization, List<JsonPatchOperation> body, Integer id, String project, String apiVersion, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String expand, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {

        // verify the required parameter 'organization' is set
        if (organization == null) {
            throw new ApiException("Missing the required parameter 'organization' when calling workItemsUpdate(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling workItemsUpdate(Async)");
        }

        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling workItemsUpdate(Async)");
        }

        // verify the required parameter 'project' is set
        if (project == null) {
            throw new ApiException("Missing the required parameter 'project' when calling workItemsUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling workItemsUpdate(Async)");
        }


        com.squareup.okhttp.Call call = workItemsUpdateCall(organization, body, id, project, apiVersion, validateOnly, bypassRules, suppressNotifications, expand, progressListener, progressRequestListener);
        return call;

    }

    /**
     *
     * Updates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param body The JSON Patch document representing the update (required)
     * @param id The id of the work item to update (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return WorkItem
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public WorkItem workItemsUpdate(String organization, List<JsonPatchOperation> body, Integer id, String project, String apiVersion, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String expand) throws ApiException {
        ApiResponse<WorkItem> resp = workItemsUpdateWithHttpInfo(organization, body, id, project, apiVersion, validateOnly, bypassRules, suppressNotifications, expand);
        return resp.getData();
    }

    /**
     *
     * Updates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param body The JSON Patch document representing the update (required)
     * @param id The id of the work item to update (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @return ApiResponse&lt;WorkItem&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<WorkItem> workItemsUpdateWithHttpInfo(String organization, List<JsonPatchOperation> body, Integer id, String project, String apiVersion, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String expand) throws ApiException {
        com.squareup.okhttp.Call call = workItemsUpdateValidateBeforeCall(organization, body, id, project, apiVersion, validateOnly, bypassRules, suppressNotifications, expand, null, null);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Updates a single work item.
     * @param organization The name of the Azure DevOps organization. (required)
     * @param body The JSON Patch document representing the update (required)
     * @param id The id of the work item to update (required)
     * @param project Project ID or project name (required)
     * @param apiVersion Version of the API to use.  This should be set to &#39;6.1-preview.3&#39; to use this version of the api. (required)
     * @param validateOnly Indicate if you only want to validate the changes without saving the work item (optional)
     * @param bypassRules Do not enforce the work item type rules on this update (optional)
     * @param suppressNotifications Do not fire any notifications for this change (optional)
     * @param expand The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call workItemsUpdateAsync(String organization, List<JsonPatchOperation> body, Integer id, String project, String apiVersion, Boolean validateOnly, Boolean bypassRules, Boolean suppressNotifications, String expand, final ApiCallback<WorkItem> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = workItemsUpdateValidateBeforeCall(organization, body, id, project, apiVersion, validateOnly, bypassRules, suppressNotifications, expand, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<WorkItem>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}

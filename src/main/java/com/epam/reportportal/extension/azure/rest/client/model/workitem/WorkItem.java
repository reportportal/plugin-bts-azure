/*
 * WorkItemTracking
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.epam.reportportal.extension.azure.rest.client.model.workitem;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/**
 * Describes a work item.
 */
@Schema(description = "Describes a work item.")
@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-03T21:33:08.123Z")
public class WorkItem extends WorkItemTrackingResource {
  @SerializedName("commentVersionRef")
  private WorkItemCommentVersionRef commentVersionRef = null;

  @SerializedName("fields")
  private Map<String, Object> fields = null;

  @SerializedName("id")
  private Integer id = null;

  @SerializedName("relations")
  private List<WorkItemRelation> relations = null;

  @SerializedName("rev")
  private Integer rev = null;

  public WorkItem commentVersionRef(WorkItemCommentVersionRef commentVersionRef) {
    this.commentVersionRef = commentVersionRef;
    return this;
  }

  /**
   * Reference to a specific version of the comment added/edited/deleted in this revision.
   *
   * @return commentVersionRef
   **/
  @Schema(description = "Reference to a specific version of the comment added/edited/deleted in this revision.")
  public WorkItemCommentVersionRef getCommentVersionRef() {
    return commentVersionRef;
  }

  public void setCommentVersionRef(WorkItemCommentVersionRef commentVersionRef) {
    this.commentVersionRef = commentVersionRef;
  }

  public WorkItem fields(Map<String, Object> fields) {
    this.fields = fields;
    return this;
  }

  public WorkItem putFieldsItem(String key, Object fieldsItem) {
    if (this.fields == null) {
      this.fields = new HashMap<String, Object>();
    }
    this.fields.put(key, fieldsItem);
    return this;
  }

  /**
   * Map of field and values for the work item.
   *
   * @return fields
   **/
  @Schema(description = "Map of field and values for the work item.")
  public Map<String, Object> getFields() {
    return fields;
  }

  public void setFields(Map<String, Object> fields) {
    this.fields = fields;
  }

  public WorkItem id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * The work item ID.
   *
   * @return id
   **/
  @Schema(description = "The work item ID.")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public WorkItem relations(List<WorkItemRelation> relations) {
    this.relations = relations;
    return this;
  }

  public WorkItem addRelationsItem(WorkItemRelation relationsItem) {
    if (this.relations == null) {
      this.relations = new ArrayList<WorkItemRelation>();
    }
    this.relations.add(relationsItem);
    return this;
  }

  /**
   * Relations of the work item.
   *
   * @return relations
   **/
  @Schema(description = "Relations of the work item.")
  public List<WorkItemRelation> getRelations() {
    return relations;
  }

  public void setRelations(List<WorkItemRelation> relations) {
    this.relations = relations;
  }

  public WorkItem rev(Integer rev) {
    this.rev = rev;
    return this;
  }

  /**
   * Revision number of the work item.
   *
   * @return rev
   **/
  @Schema(description = "Revision number of the work item.")
  public Integer getRev() {
    return rev;
  }

  public void setRev(Integer rev) {
    this.rev = rev;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItem workItem = (WorkItem) o;
    return Objects.equals(this.commentVersionRef, workItem.commentVersionRef) && Objects.equals(
        this.fields, workItem.fields) && Objects.equals(this.id, workItem.id) && Objects.equals(
        this.relations, workItem.relations) && Objects.equals(this.rev, workItem.rev)
        && super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commentVersionRef, fields, id, relations, rev, super.hashCode());
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItem {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    commentVersionRef: ").append(toIndentedString(commentVersionRef)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    relations: ").append(toIndentedString(relations)).append("\n");
    sb.append("    rev: ").append(toIndentedString(rev)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

/*
 * WorkItemTracking
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 6.1-preview
 * Contact: nugetvss@microsoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.epam.reportportal.extension.azure.rest.client.model.workitem;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;

/**
 * Represents the reference to a specific version of a comment on a Work Item.
 */
@Schema(description = "Represents the reference to a specific version of a comment on a Work Item.")
@jakarta.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-03T21:33:08.123Z")
public class WorkItemCommentVersionRef extends WorkItemTrackingResourceReference {
  @SerializedName("commentId")
  private Integer commentId = null;

  @SerializedName("createdInRevision")
  private Integer createdInRevision = null;

  @SerializedName("isDeleted")
  private Boolean isDeleted = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("version")
  private Integer version = null;

  public WorkItemCommentVersionRef commentId(Integer commentId) {
    this.commentId = commentId;
    return this;
  }

   /**
   * The id assigned to the comment.
   * @return commentId
  **/
  @Schema(description = "The id assigned to the comment.")
  public Integer getCommentId() {
    return commentId;
  }

  public void setCommentId(Integer commentId) {
    this.commentId = commentId;
  }

  public WorkItemCommentVersionRef createdInRevision(Integer createdInRevision) {
    this.createdInRevision = createdInRevision;
    return this;
  }

   /**
   * [Internal] The work item revision where this comment was originally added.
   * @return createdInRevision
  **/
  @Schema(description = "[Internal] The work item revision where this comment was originally added.")
  public Integer getCreatedInRevision() {
    return createdInRevision;
  }

  public void setCreatedInRevision(Integer createdInRevision) {
    this.createdInRevision = createdInRevision;
  }

  public WorkItemCommentVersionRef isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * [Internal] Specifies whether comment was deleted.
   * @return isDeleted
  **/
  @Schema(description = "[Internal] Specifies whether comment was deleted.")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public WorkItemCommentVersionRef text(String text) {
    this.text = text;
    return this;
  }

   /**
   * [Internal] The text of the comment.
   * @return text
  **/
  @Schema(description = "[Internal] The text of the comment.")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public WorkItemCommentVersionRef version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * The version number.
   * @return version
  **/
  @Schema(description = "The version number.")
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemCommentVersionRef workItemCommentVersionRef = (WorkItemCommentVersionRef) o;
    return Objects.equals(this.commentId, workItemCommentVersionRef.commentId) &&
        Objects.equals(this.createdInRevision, workItemCommentVersionRef.createdInRevision) &&
        Objects.equals(this.isDeleted, workItemCommentVersionRef.isDeleted) &&
        Objects.equals(this.text, workItemCommentVersionRef.text) &&
        Objects.equals(this.version, workItemCommentVersionRef.version) &&
        super.equals(o);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commentId, createdInRevision, isDeleted, text, version, super.hashCode());
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemCommentVersionRef {\n");
    sb.append("    ").append(toIndentedString(super.toString())).append("\n");
    sb.append("    commentId: ").append(toIndentedString(commentId)).append("\n");
    sb.append("    createdInRevision: ").append(toIndentedString(createdInRevision)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
